// Form Elements
// ----------------------------------------------------------------------
// Base
// ------------------------------------------------------
.form-group {
  position: relative;
  margin-bottom: rem($pm-size-1 + 5);
}

.form-element {
  position: relative;
  margin-bottom: rem($pm-size-1 + 5);
}

// Checkbox
// ------------------------------------------------------
// Customize the label
.form-checkbox {
  min-height: rem(20px);
  line-height: 1.2;
  position: relative;
  padding-left: rem(26px);
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;

  &.no-label {
    margin: 0;
    padding: 0;
  }

  // Hide the default checkbox
  input[type="checkbox"] {
    height: 0;
    width: 0;
    position: absolute;
    opacity: 0;
    cursor: pointer;
  }

  // Create a custom checkbox
  .checkmark {
    background-color: #fff;
    height: rem(17px);
    width: rem(17px);
    border: 1px solid $grey-4;
    border-radius: rem(3px);
    position: absolute;
    top: 0;
    left: 0;
    @include transition(null, 0.3s, null);
  }

  // On mouse-over, add a background color
  &:hover {
    input[type="checkbox"] ~ .checkmark {
      border: 1px solid $grey-6;
    }
  }

  // When the checkbox is checked, add a background
  input[type="checkbox"]:checked ~ .checkmark {
    background-color: $blue-3;
    border-color: $blue-3;
  }

  // Create the checkmark/indicator
  .checkmark {
    &::after {
      display: none;
      content: "";
      position: absolute;
    }
  }

  // Show the checkmark when checked
  input[type="checkbox"]:checked ~ .checkmark {
    &::after {
      display: block;
    }
  }

  .checkmark {
    &::after {
      height: rem(11px);
      width: rem(5px);
      border: 1px solid #fff;
      border-width: rem(0 2px 2px 0);
      top: rem(1px);
      left: rem(5px);
      transform: rotate(45deg);
    }
  }

  &.is-disabled {
    color: $grey-5;
    cursor: default;
    pointer-events: none;

    input[type="checkbox"] ~ .checkmark {
      background-color: $grey-1;
      border-color: $grey-3;
    }
  }
}

// Radio
// ------------------------------------------------------
// Customize the label
.form-radio {
  line-height: 1.3;
  position: relative;
  padding-left: rem(28px);
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;

  // Hide the default radio button
  input[type="radio"] {
    position: absolute;
    height: 0;
    width: 0;
    opacity: 0;
    cursor: pointer;
  }

  // Create a custom radio button
  .checkmark {
    background-color: #fff;
    height: rem(18px);
    width: rem(18px);
    border: 1px solid $grey-4;
    border-radius: 50%;
    position: absolute;
    top: 0;
    left: 0;
    @include transition(null, 0.3s, null);
  }

  // On mouse-over, add a background color
  &:hover {
    input[type="radio"] ~ .checkmark {
      border: 1px solid $grey-6;
    }
  }

  // When the radio button is checked
  input[type="radio"]:checked ~ .checkmark {
    background-color: $blue-3;
    border-color: $blue-3;
  }

  // Create the indicator
  .checkmark {
    &::after {
      display: none;
      content: "";
      position: absolute;
    }
  }

  // Show the indicator (dot/circle) when checked
  input[type="radio"]:checked ~ .checkmark {
    &::after {
      display: block;
    }
  }

  .checkmark {
    &::after {
      background: #fff;
      height: rem(10px);
      width: rem(10px);
      top: rem(3px);
      left: rem(3px);
      border-radius: 100%;
    }
  }

  &.is-disabled {
    color: $grey-5;
    cursor: default;
    pointer-events: none;

    input[type="radio"] ~ .checkmark {
      background-color: $grey-1;
      border-color: $grey-3;
    }
  }
}

// Custom Select
// ------------------------------------------------------
.custom-select {
  display: inline-block;
  position: relative;

  &::before {
    display: block;
    content: "";
    height: rem(10px);
    width: rem(10px);
    margin: 0 auto;
    padding: rem(2px);
    border: solid $grey-5;
    border-width: rem(0 2px 2px 0);
    position: absolute;
    top: rem(10px);
    right: rem(10px);
    z-index: -1;
    @include transform(rotate(45deg));
  }

  select {
    width: auto;
  }
}

// Toggle Switch
// ------------------------------------------------------
.toggle-switch {
  position: relative;
  height: rem(18px);
  width: rem(37px);
}

// Hide default checkbox
.toggle-switch {
  input[type="checkbox"] {
    height: 0;
    width: 0;
    opacity: 0;
  }

  .toggle-slider {
    background-color: $grey-5;
    cursor: pointer;
    border: 1px solid transparent;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    @include transition(null, 0.3s, null);

    &::before {
      background-color: #fff;
      content: "";
      height: rem(14px);
      width: (14px);
      position: absolute;
      left: rem(3px);
      bottom: rem(1px);
      @include transition(null, 0.3s, null);
    }

    &.round {
      border-radius: rem(20px);

      &::before {
        border-radius: 50%;
      }
    }
  }

  &.is-disabled {
    .toggle-slider {
      background-color: $grey-1;
      border: 1px solid $grey-3;
      cursor: default;
      pointer-events: none;

      &::before {
        background-color: $grey-3;
      }
    }
  }

  input[type="checkbox"]:checked + .toggle-slider {
    background-color: $blue-3;
  }

  input[type="checkbox"]:focus + .toggle-slider {
    box-shadow: 0 0 1px 0 $positive;
  }

  input[type="checkbox"]:checked + .toggle-slider {
    &::before {
      @include transform(translateX(15px));
    }
  }
}
